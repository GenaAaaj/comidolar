---
import type { PaymentMethodType } from "../db/payment.ts";
const { name, short, image, pallete, cbu, alias, isWallet, coffee }: PaymentMethodType = Astro.props as PaymentMethodType;
const { background, gradientfrom, gradientto, border, shadow } = pallete;
---

<div class={`paymethod ${short}`}>
    <img alt={`Logo de ${name}`} src={image} />
    { !coffee ?
    <div class="cbucont">
        <span>{!isWallet ? "CBU" : "CVU"}:</span>
        <p id={`cbu-${short}`}>{cbu}</p>
        <button id={'copy-cbu-'+short}>
            <svg
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="currentColor"
                viewBox="0 0 24 24"
            >
                <path
                    fill-rule="evenodd"
                    d="M8 3c0-.6.4-1 1-1h6c.6 0 1 .4 1 1h2a2 2 0 0 1 2 2v15a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h2Zm6 1h-4v2H9a1 1 0 0 0 0 2h6a1 1 0 1 0 0-2h-1V4Zm-6 8c0-.6.4-1 1-1h6a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1Zm1 3a1 1 0 1 0 0 2h6a1 1 0 1 0 0-2H9Z"
                    clip-rule="evenodd"></path>
            </svg>
        </button>
    </div>
    <div class="cbucont">
        <span>ALIAS:</span>
        <p id={`alias-${short}`}>{alias}</p>
        <button id={'copy-alias-'+short}>
            <svg
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="currentColor"
                viewBox="0 0 24 24"
            >
                <path
                    fill-rule="evenodd"
                    d="M8 3c0-.6.4-1 1-1h6c.6 0 1 .4 1 1h2a2 2 0 0 1 2 2v15a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h2Zm6 1h-4v2H9a1 1 0 0 0 0 2h6a1 1 0 1 0 0-2h-1V4Zm-6 8c0-.6.4-1 1-1h6a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1Zm1 3a1 1 0 1 0 0 2h6a1 1 0 1 0 0-2H9Z"
                    clip-rule="evenodd"></path>
            </svg>
        </button>
    </div> :

    <a href="https://www.buymeacoffee.com/genadev" target="_blank">
        <button class="bmcb">IR</button>
    </a>
    }
</div>

<style define:vars={{ background, gradientfrom, gradientto, border, shadow }}>
    .paymethod {
        background: var(--background);
        background: linear-gradient(
            135deg,
            var(--gradientfrom) 0%,
            var(--gradientto) 100%
        );
        border-color: var(--border) !important;

        transition: 0.5s ease;
        width: 40%;
        min-width: 250px;
        height: 100%;
        margin: 6px;
        border-radius: 8px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        border: solid 3px;
        padding: 20px;

        &:hover {
            box-shadow: var(--shadow) 20px 0px 80px;
            transition: 0.5s ease;
        }

        img {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            border: 1px solid var(--border);
        }
    }

    .cbucont {
        display: flex;
        align-items: center;
        margin-top: 10px;

        span {
            font-weight: 600;
            margin-right: 4px;
        }
    }

    button {
        margin-left: 8px;
        padding: 8px;
        background-color: rgba(255, 255, 255, 0.4);
        border: none;
        border-radius: 8px;
        cursor: pointer;

        &:hover {
            background-color: rgba(255, 255, 255, 0.6);
        }
    }

    svg {
        width: 20px;
        height: 20px;
        fill: #1f2937;
    }

    .bmcb {
            padding-inline: 24px;
            padding-block: 8px;
            margin-top: 4px;
        }

    @media screen and (max-width: 1080px) {
            .paymethod {
                width: 85%;
            }
        }

        @media screen and (max-width: 768px) {
            .paymethod {
                width: 100%;
            }
        }
</style>
{
    !coffee && (
        <script is:inline define:vars={{ short }}>
            const copyCBU = document.getElementById('copy-cbu-' + short);
            const copyALIAS = document.getElementById('copy-alias-' + short);

            copyCBU.addEventListener('click', () => copyToClipboard(`cbu-${short}`));
            copyALIAS.addEventListener('click', () => copyToClipboard(`alias-${short}`));

            function copyToClipboard(elementId) {
                var copyText = document.getElementById(elementId);
                var tempInput = document.createElement("input");
                tempInput.value = copyText.textContent;
                document.body.appendChild(tempInput);
                tempInput.select();
                document.execCommand("copy");
                document.body.removeChild(tempInput);
                alert("Â¡Copiado al portapapeles!");
            }
        </script>
    )
}

